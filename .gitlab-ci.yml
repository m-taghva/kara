# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Bash.gitlab-ci.yml

# See https://docs.gitlab.com/ee/ci/yaml/index.html for all available options

# you can delete this line if you're not using Docker
#image: busybox:latest
stages:
  - build
  - test
  - deploy
  - release

before_script:
  - echo "Before script section"
  - echo "For example you might run an update here or install a build dependency"
  - echo "Or perhaps you might print out some debugging details"

after_script:
  - echo "After script section"
  - echo "For example you might do some cleanup here"
  - docker image prune -f

build-dev:
  stage: build
  only:
    - main
    - dev
  when: always
#  when: manual
#  allow_failure: false
  tags:
    - dev
  script:
    - echo "build image"
    - docker build --tag kara:1.0.1 .

build-test:
  stage: build
  only:
    - main
  when: always
#  when: manual
#  allow_failure: false
  tags:
    - test
  script:
    - echo "build image"
    - docker build --tag kara:1.0.1 .

test1:
  stage: test
  only:
    - main
  tags:
    - kara
  script:
    - echo "Do a test here"
    - echo "For example run a test suite"

test2:
  stage: test
  only:
    - main
  tags:
    - kara
  script:
    - echo "Do another parallel test here"
    - echo "For example run a lint test"

deploy-dev:
  stage: deploy
  only:
    - main
    - dev
  when: manual
  allow_failure: false
  environment:
    name: develop
  tags:
    - dev
  script:
    - echo "deploy kara container"
    - cd docker
    - mkdir -p /home/gitlab-runner/kara
    - cp docker-compose.yaml /home/gitlab-runner/kara/
    - cd /home/gitlab-runner/kara
    - docker-compose down
    - docker-compose run --rm kara /home/kara/docker/init.sh
    - docker-compose up -d
#  environment: production

deploy-test:
  stage: deploy
  only:
    - main
  when: manual
  allow_failure: false
  environment:
    name: preproduction
  tags:
    - test
  script:
    - echo "deploy kara container"
    - cd docker
    - mkdir -p /home/gitlab-runner/kara
    - cp docker-compose.yaml /home/gitlab-runner/kara/
    - cd /home/gitlab-runner/kara
    - docker-compose down
    - docker-compose run --rm kara /home/kara/docker/init.sh
    - docker-compose up -d
#  environment: production

release:
  stage: release
  script:
    - echo "Create new release kara:$CI_COMMIT_TAG"
    - PREVIOUS_TAG_COMMIT=$(git rev-list -n 1 $(git tag --sort=creatordate | grep -B 1 $CI_COMMIT_TAG | head -n 1))
    - export COMMIT_MESSAGES=$(git log --format="%s" $PREVIOUS_TAG_COMMIT..$(git rev-list -n 1 $CI_COMMIT_TAG)| sed 's/^/- /')
    - echo "$COMMIT_MESSAGES" > release_description.txt
    - cat release_description.txt
    - docker image tag "kara:$CI_COMMIT_TAG" "registry.zdrive.ir/kara:$CI_COMMIT_TAG"
    - docker push "registry.zdrive.ir/kara:$CI_COMMIT_TAG"
  tags:
    - dev
  rules:
    - if: "$CI_COMMIT_TAG"
      when: always
  release:
    tag_name: "$CI_COMMIT_TAG"
    description: "$(cat release_description.txt)"
